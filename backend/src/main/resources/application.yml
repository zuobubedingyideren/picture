server:
  port: 8123
  servlet:
    context-path: /api
  reactive:
    session:
      cookie:
        max-age: 2592000
spring:
  application:
    name: picture-backend
  # 配置文件激活
  profiles:
    active: local
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/yu_picture?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
  # redis
  redis:
    host: localhost
    database: 0
    port: 6379
    timeout: 5000
  servlet:
    multipart:
      max-file-size: 10MB
  session:
    store-type: redis
    timeout: 2592000

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    # 仅仅在开发环境开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 逻辑删除字段
      logic-delete-field: isDelete
      # 逻辑删除值
      logic-delete-value: 1
      # 逻辑未删除值
      logic-not-delete-value: 0
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.px.picturebackend.model.entity

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.px.picturebackend.controller

# 阿里云AI配置
# 优先从环境变量读取，如果没有则从application-local.yml读取
aliYunAi:
  apiKey: ${ALI_YUN_AI_API_KEY:}

# 腾讯云COS配置
# 优先从环境变量读取，如果没有则从application-local.yml读取
cos:
  client:
    host: https://picture-1356335042.cos.ap-chongqing.myqcloud.com
    secretId: ${TENCENT_COS_SECRET_ID:}
    secretKey: ${TENCENT_COS_SECRET_KEY:}
    region: ap-chongqing
    bucket: picture-1356335042
    # 分块上传配置
    multipartUploadThreshold: 10485760  # 10MB，文件大小超过此值时使用分块上传
    partSize: 2097152                   # 2MB，每个分块的大小
    threadPoolSize: 5                   # 线程池大小，用于并发上传分块